version: "3"
services:
  https:
    image: caddy:2.4.5-alpine@sha256:6f3b5ea2bfc0b28617452cd422177cc1bf67bd75dc1705cb863fd57d0b43faac
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/caddy:/etc/caddy
      - ./srv:/srv
      - caddy_data:/data
      - caddy_config:/config
      - minicharge_tmp:/tmp/minicharge
  minicharge:
    image: miniflux/miniflux:2.0.33@sha256:77726b617e71a046ea4d02890f7f4a5d43a3c774c7de073ad06bec521ae75f12
    restart: unless-stopped
    environment:
      LISTEN_ADDR: /tmp/miniflux.sock
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@/postgres?host=/tmp/postgresql
      RUN_MIGRATIONS: "1"
    volumes:
      - minicharge_tmp:/tmp
      - postgres_tmp:/tmp/postgresql
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14.0-alpine@sha256:a8409dff6597f2ef5f7ecd3c672671bb2af9a390073efd74f95c54aa41cba22a
    restart: unless-stopped
    healthcheck:
      test: pg_isready
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_tmp:/var/run/postgresql
      - postgres_data:/var/lib/postgresql/data
  dns.keiu.net:
    image: coredns/coredns:1.8.5@sha256:43a9f52f5dce39bf1816afe6141724cc2d08811e466dd46e6628c925e2419bdc
    restart: unless-stopped
    expose: ["443"]
    ports: ["853:853"]
    volumes:
      - ./etc/coredns:/etc/coredns
      - caddy_data:/var/lib/caddy/data
    command: "-conf /etc/coredns/Corefile"
volumes:
  caddy_data:
  caddy_config:
  minicharge_tmp:
  postgres_tmp:
  postgres_data:
