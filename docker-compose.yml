version: "3"
services:
  https:
    image: caddy:2.5.0-alpine@sha256:e602ecd5eed4cae0d809ef6cdd2b0faa091da3cea6f71dbfdfa924411c744b99
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/caddy:/etc/caddy
      - ./srv:/srv
      - caddy_data:/data
      - caddy_config:/config
      - minicharge_tmp:/tmp/minicharge
  minicharge:
    image: miniflux/miniflux:2.0.36@sha256:e2fb990dae74e16b087ac07b8518e4bd1babfa710f0243ef9cc1b7f1d2d24ba2
    restart: unless-stopped
    environment:
      LISTEN_ADDR: /tmp/miniflux.sock
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@/postgres?host=/tmp/postgresql
      RUN_MIGRATIONS: "1"
    volumes:
      - minicharge_tmp:/tmp
      - postgres_tmp:/tmp/postgresql
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14.2-alpine@sha256:20e49432a20e1a63bb985977c32ec8f110bc609b93de35ad4f19c5486abcefaa
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_tmp:/var/run/postgresql
      - postgres_data_v14:/var/lib/postgresql/data
  dns.keiu.net:
    image: coredns/coredns:1.9.1@sha256:d5a7db9ab4cb3efc22a08707385c54c328db3df32841d6c4a8ae78f102f1f49a
    restart: unless-stopped
    expose: ["443"]
    ports: ["853:853"]
    volumes:
      - ./etc/coredns:/etc/coredns
      - caddy_data:/var/lib/caddy/data
    command: "-conf /etc/coredns/Corefile"
volumes:
  caddy_data:
  caddy_config:
  minicharge_tmp:
  postgres_tmp:
  postgres_data_v14:
