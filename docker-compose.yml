version: "3"
services:
  https:
    image: caddy:2.4.3-alpine@sha256:f00d2e7e82418a30135cbe5c1455df6c617ee651d6f430183a8e49e3b2608359
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/caddy:/etc/caddy
      - ./srv:/srv
      - caddy_data:/data
      - caddy_config:/config
      - minicharge_tmp:/tmp/minicharge
  minicharge:
    image: miniflux/miniflux:2.0.31@sha256:63dea50e3dbb472e60f6fff59726867f588f61b246a93141b050b5041eed422f
    restart: unless-stopped
    environment:
      LISTEN_ADDR: /tmp/miniflux.sock
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@/postgres?host=/tmp/postgresql
    volumes:
      - minicharge_tmp:/tmp
      - postgres_tmp:/tmp/postgresql
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:13.4-alpine@sha256:dc86d1cb801c9641c3e9c5bc094a098bdb79aeade0318adf2a17acf3a8724a7a
    restart: unless-stopped
    healthcheck:
      test: pg_isready
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./etc/postgres/initdb.d:/docker-entrypoint-initdb.d
      - postgres_tmp:/var/run/postgresql
      - postgres_data:/var/lib/postgresql/data
volumes:
  caddy_data:
  caddy_config:
  minicharge_tmp:
  postgres_tmp:
  postgres_data:
